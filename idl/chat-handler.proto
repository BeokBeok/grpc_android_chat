// Copyright 2015 gRPC authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

option go_package = ".;model";
option java_multiple_files = true;
option java_package = "io.grpc.chat";
option java_outer_classname = "ChatHandler";

package model;

import "chat-domain.proto";
import "event-domain.proto";

service Chat {
    rpc EventListen(EventListenRequest) returns (stream Receive) {}
    rpc Create(CreateRequest) returns (CreateResponse) {}
    rpc Write(WriteRequest) returns (WriteResponse) {}
    rpc GetUsers(GetUsersRequest) returns (GetUsersResponse) {}
    rpc GetRooms(GetRoomsRequest) returns (GetRoomsResponse) {}
    rpc ChatIn(ChatInRequest) returns (ChatInResponse) {}
    rpc ChatOut(ChatOutRequest) returns (ChatOutResponse) {}
    rpc GetMessages(GetMessagesRequest) returns (GetMessagesResponse) {}
    rpc ReceiveAck(ReceiveAckRequest) returns (ReceiveAckResponse) {}
    rpc ReadAck(ReadAckRequest) returns (ReadAckResponse) {}
    rpc SyncChats(SyncChatsRequest) returns (SyncChatsResponse) {}
    rpc SyncLogs(SyncLogsRequest) returns (SyncLogsResponse) {}
    rpc SyncRead(SyncReadRequest) returns (SyncReadResponse) {}
    rpc Leave(LeaveRequest) returns (LeaveResponse) {}
    rpc Invite(InviteRequest) returns (InviteResponse) {}
    rpc Join(JoinRequest) returns (JoinResponse) {}
    rpc Kick(KickRequest) returns (KickResponse) {}
    rpc Delete(DeleteRequest) returns (DeleteResponse) {}
}

service ChatRoute {
    rpc Delivery(DeliveryRequest) returns (DeliveryResponse) {}
}
